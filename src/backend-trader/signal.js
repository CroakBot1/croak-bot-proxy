// == SIGNAL.JS ==
// Price Signal Detector + Executor Trigger

const logger = require('./logger');
const { getCurrentPrice } = require('./priceFetcher');
const { swapEthToUsdc } = require('./executor');

// ‚úÖ Strategy Thresholds
const BUY_THRESHOLD = 2850;   // Example: Buy ETH below $2850
const SELL_THRESHOLD = 3550;  // Example: Sell ETH above $3550

// ‚úÖ Trade Amount in ETH
const TRADE_AMOUNT_ETH = 0.01;

// ‚úÖ Signal Check Loop
async function checkSignalAndExecute() {
  try {
    logger.info("‚è≥ Running 61K strategy check...");

    const ethPrice = await getCurrentPrice();
    logger.info("üìà ETH Current Price:", ethPrice);

    if (ethPrice < BUY_THRESHOLD) {
      logger.info("‚úÖ BUY Signal Detected üü¢");
      await swapEthToUsdc(TRADE_AMOUNT_ETH); // ‚ö° Execute trade
    } else if (ethPrice > SELL_THRESHOLD) {
      logger.info("‚ö†Ô∏è SELL Signal Detected üî¥");
      logger.warn("üí§ SELL logic not implemented yet...");
      // TODO: swapUsdcToEth(); if needed
    } else {
      logger.info("‚è∏Ô∏è No clear signal. Waiting...");
    }

  } catch (err) {
    logger.error("üí• Error during signal check:", err);
  }
}

// ‚úÖ Auto-loop every 30s
setInterval(checkSignalAndExecute, 30 * 1000);
